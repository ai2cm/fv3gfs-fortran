
############
# commands #
############
FC = ftn 
CC = cc
CXX = CC
LD = $(FC) 

#########
# flags #
#########
# default is 64-bit OpenMP non-hydrostatic build using AVX2
DEBUG =
REPRO =
VERBOSE =
OPENMP = Y
AVX2 = Y
HYDRO = N
32BIT = N

NCEPLIBS_DIR = /project/s1053/install/ncep/gnu
NEMSIOINC = -I$(NCEPLIBS_DIR)/include
NCEPLIBS = -L$(NCEPLIBS_DIR)/lib -lbacio_4 -lsp_v2.0.2_d -lw3nco_d
ifneq ($(OPENMP),)
  ifeq ($(32BIT),Y)
    FMS_DIR = /project/s1053/install/fms/gnu_r4
  else
    FMS_DIR = /project/s1053/install/fms/gnu_r8
  endif
else
  ifeq ($(32BIT),Y)
    FMS_DIR = /project/s1053/install/fms/gnu_r4_noomp
  else
    FMS_DIR = /project/s1053/install/fms/gnu_r8_noomp
  endif
endif
ESMF_DIR = /project/s1053/install/esmf/8.0.0_gnu

##############################################
# Need to use at least GNU Make version 3.81 #
##############################################
need := 3.81
ok := $(filter $(need),$(firstword $(sort $(MAKE_VERSION) $(need))))
ifneq ($(need),$(ok))
$(error Need at least make version $(need).  Load module gmake/3.81)
endif

INCLUDE = -I$(NETCDF_DIR)/include -I$(ESMF_DIR)/include -I$(FMS_DIR)/include

FPPFLAGS := -cpp -Wp,-w $(INCLUDE) -fPIC
CFLAGS := $(INCLUDE) -fPIC

FFLAGS := $(INCLUDE) -fcray-pointer -ffree-line-length-none -fno-range-check -fPIC 

CPPDEFS += -Duse_libMPI -Duse_netCDF -DSPMD -DUSE_LOG_DIAG_FIELD_INFO -Duse_LARGEFILE -DUSE_GFSL63 -DGFS_PHYS 
CPPDEFS += -DNEW_TAUCTMAX -DINTERNAL_FILE_NML -DNO_INLINE_POST

ifeq ($(GT4PY_DEV),Y)
CPPDEFS += -DGT4PY_DEV
endif

ifeq ($(AI2_SUBSET_PHYSICS),Y)
CPPDEFS += -DAI2_SUBSET_PHYSICS
endif

ifneq ($(HYDRO),Y)
CPPDEFS += -DMOIST_CAPPA -DUSE_COND
endif

ifeq ($(32BIT),Y)
CPPDEFS += -DOVERLOAD_R4 -DOVERLOAD_R8
else
FFLAGS += -fdefault-double-8 -fdefault-real-8 
endif

ifeq ($(AVX2),Y)
FFLAGS += -mavx2
CFLAGS += -mavx2
endif

FFLAGS_OPT = -O2 
FFLAGS_REPRO = -O2 -g -fbacktrace
FFLAGS_DEBUG = -O0 -g -fbacktrace -fno-fast-math -ffree-line-length-none -fno-backslash -pedantic -Waliasing -Wampersand -Wline-truncation -Wsurprising -Wtabs -Wunderflow -fdump-core -ffpe-trap=invalid,zero,overflow -fbounds-check -finit-real=nan -finit-integer=9999999 -finit-logical=true -finit-character=35

FFLAGS_OPENMP = -fopenmp
FFLAGS_VERBOSE = -v -V -what

CFLAGS += -D__IFC 

CFLAGS_OPT = -O2 
CFLAGS_REPRO = -O2 
CFLAGS_OPENMP = -fopenmp
CFLAGS_DEBUG = -O0 -g 

LDFLAGS :=
LDFLAGS_OPENMP := -fopenmp
LDFLAGS_VERBOSE := -Wl,-V,--verbose,-cref,-M

# start with blank LIBS
LIBS := -lgfortran

FAST :=
ifneq ($(REPRO),)
CFLAGS += $(CFLAGS_REPRO)
FFLAGS += $(FFLAGS_REPRO)
else ifneq ($(DEBUG),)
CFLAGS += $(CFLAGS_DEBUG)
FFLAGS += $(FFLAGS_DEBUG)
else ifneq ($(TEST),)
CFLAGS += $(CFLAGS_TEST)
FFLAGS += $(FFLAGS_TEST)
else
CFLAGS += $(CFLAGS_OPT)
FFLAGS += $(FFLAGS_OPT)
endif

ifneq ($(OPENMP),)
CFLAGS += $(CFLAGS_OPENMP)
FFLAGS += $(FFLAGS_OPENMP)
LDFLAGS += $(LDFLAGS_OPENMP)
endif

ifneq ($(VERBOSE),)
CFLAGS += $(CFLAGS_VERBOSE)
FFLAGS += $(FFLAGS_VERBOSE)
LDFLAGS += $(LDFLAGS_VERBOSE)
endif

LIBS += -L$(ESMF_DIR)/lib -lesmf -L$(FMS_DIR)/lib -lfms -L$(NETCDF_DIR)/lib -lnetcdff -lnetcdf

LDFLAGS += $(LIBS) -lstdc++ -lc -lrt
